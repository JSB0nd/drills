{
  "title": "Создание композиции компонентов в React (без хуков и эффектов).",
  "goals": [
    "Внимание! Материал для начинающих. Если вы с опытом разработки в React, то можете пропустить это упражнение.",
    "Практическое освоение основ композиции компонентов в React.",
    "Закрепление навыков передачи пропсов и многократного использования компонентов."
  ],
  "training_topic": "Композиция компонентов, передача пропсов в React.",
  "required_resources": [
    "Редактор кода (VS Code, Sublime Text и т.д.).",
    "React-проект (готовое приложение или созданный вручную)."
  ],
  "instructions": [
    "Введение в упражнение:",
    "- Цель упражнения — научиться создавать и компоновать React-компоненты, передавая пропсы и многократно используя компоненты в JSX.",
    "",
    "Шаг 1. Подготовьте рабочую среду:",
    "- Откройте редактор кода, скачайте файл в дополнительных материалах, разархивируйте и выполните команды для установки.",
    {
      "type": "code",
      "title": "Установка npm-пакетов",
      "code": "cd 1"
    },
    {
      "type": "code",
      "title": "",
      "code": "npm install"
    },
    {
      "type": "code",
      "title": "",
      "code": "npm start"
    },
    "",
    "Шаг 2. Создание родительского компонента:",
    "- В файл `App.js` поместите следующий код родительского компонента:",
    {
      "type": "code",
      "title": "Родительский компонент App",
      "code": "import React from 'react'; import ChildComponent from './ChildComponent'; const App = () => (<><h1>Композиция компонентов в React</h1><ChildComponent message='Привет!' /><ChildComponent message='Мир!' /><ChildComponent message='React!' /></>); export default App;"
    },
    "",
    "Шаг 3. Создание дочернего компонента:",
    "- Создайте файл `ChildComponent.js` и поместите в него следующий код дочернего компонента:",
    {
      "type": "code",
      "title": "Дочерний компонент ChildComponent",
      "code": "import React from 'react'; const ChildComponent = ({ message }) => (<div style={{ marginBottom: '1rem' }}><p>{message}</p></div>); export default ChildComponent;"
    },
    "",
    "Шаг 4. Композиция компонентов и передача пропсов:",
    "- В файле `App.js` компонуйте дочерний компонент `ChildComponent` несколько раз передавая разные значения пропса `message`.",
    "",
    "Шаг 5. Запуск и просмотр результата:",
    "- Запустите проект с помощью команды `npm start`.",
    "- В браузере убедитесь что все компоненты отобразились с переданными пропсами.",
    "",
    "Заключение:",
    "- Вы создали и композировали React-компоненты освоив передачу пропсов и многократное использование компонентов."
  ],
  "reflection_questions": [
    "Какие задачи решает композиция компонентов в React?",
    "Как организовано взаимодействие между родительским и дочерним компонентами?",
    "Какие преимущества даёт возможность многократного использования компонентов в React?"
  ],
  "additional_materials": [
    {
    "type": "link",
    "title": "Файлы для выполнения упражнения",
    "name": "1",
    "folder": "1",
    "chapter": "5.5"
    },    
    "Документация React: https://react.dev/learn"
  ],
  "final_conclusion": [
    "Вы освоили основы композиции компонентов в React научились передавать пропсы и многократно использовать компоненты заложив фундамент для дальнейшего изучения React."
  ]
}